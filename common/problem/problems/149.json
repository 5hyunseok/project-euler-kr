{"id":146,"number":149,"title":"Searching for a maximum-sum subsequence","problem":"\n<p>Looking at the table below, it is easy to verify that the maximum possible sum of adjacent numbers in any direction (horizontal, vertical, diagonal or anti-diagonal) <span style=\"white-space:nowrap;\">is 16 (= 8 + 7 + 1).</span></p>\n\n<div style=\"text-align:center;\">\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"0\" style=\"margin:auto;\"><tbody align=\"right\"><tr><td>&#x2212;2</td><td>5</td><td>3</td><td>2</td></tr><tr><td>9</td><td>&#x2212;6</td><td>5</td><td>1</td></tr><tr><td>3</td><td>2</td><td>7</td><td>3</td></tr><tr><td>&#x2212;1</td><td>8</td><td>&#x2212;4</td><td>&#xA0; 8</td></tr></tbody></table></div>\n\n<p>Now, let us repeat the search, but on a much larger scale:</p>\n\n<p>First, generate four million pseudo-random numbers using a specific form of what is known as a &quot;Lagged Fibonacci Generator&quot;:</p>\n\n<p>For 1 &#x2264; <i>k</i> &#x2264; 55, <i>s</i><sub><i>k</i></sub> = [100003 &#x2212; 200003<i>k</i> + 300007<i>k</i><sup>3</sup>] (modulo 1000000) &#x2212; 500000.<br>\nFor 56 &#x2264; <i>k</i> &#x2264; 4000000, <i>s</i><sub><i>k</i></sub> = [<i>s</i><sub><i>k&#x2212;24</i></sub> + <i>s</i><sub><i>k&#x2212;55</i></sub> + 1000000] (modulo 1000000) &#x2212; 500000.</p>\n\n<p>Thus, <i>s</i><sub>10</sub> = &#x2212;393027 and <i>s</i><sub>100</sub> = 86613.</p>\n\n<p>The terms of <i>s</i> are then arranged in a 2000&#xD7;2000 table, using the first 2000 numbers to fill the first row (sequentially), the next 2000 numbers to fill the second row, and so on.</p>\n\n<p>Finally, find the greatest sum of (any number of) adjacent entries in any direction (horizontal, vertical, diagonal or anti-diagonal).</p>\n","title_kr":"","problem_kr":""}